//=== MiniATInstPrinter.h - Convert MiniAT MCInst to assembly syntax -*- C++ -*-==//
//
//                     The LLVM Compiler Infrastructure
//
// This file is distributed under the University of Illinois Open Source
// License. See LICENSE.TXT for details.
//
//===----------------------------------------------------------------------===//
//
// This class prints a MiniAT MCInst to a .s file.
//
//===----------------------------------------------------------------------===//

#ifndef MINIATINSTPRINTER_H
#define MINIATINSTPRINTER_H

#include "llvm/MC/MCInstPrinter.h"

namespace llvm {
// These enumeration declarations were orignally in MiniATInstrInfo.h but
// had to be moved here to avoid circular dependencies between
// LLVMMiniATCodeGen and LLVMMiniATAsmPrinter.

    class TargetMachine;

    class MiniATInstPrinter : public MCInstPrinter {
    public:
      MiniATInstPrinter(const MCAsmInfo &MAI, const MCInstrInfo &MII,
              const MCRegisterInfo &MRI)
              : MCInstPrinter(MAI, MII, MRI) {}

      // Autogenerated by tblgen.
      void printInstruction(const MCInst *MI, raw_ostream &O);
      static const char *getRegisterName(unsigned RegNo);

      void printRegName(raw_ostream &OS, unsigned RegNo) const override;
      void printInst(const MCInst *MI, raw_ostream &O, StringRef Annot) override;

      bool printAliasInstr(const MCInst *MI, raw_ostream &OS);
      void printCustomAliasOperand(const MCInst *MI, unsigned OpIdx,
              unsigned PrintMethodIdx, raw_ostream &O);

    private:
      void printOperand(const MCInst *MI, unsigned OpNo, raw_ostream &O);
      void printUnsignedImm(const MCInst *MI, int opNum, raw_ostream &O);
      void printMemOperand(const MCInst *MI, int opNum, raw_ostream &O);
    };
} // end namespace llvm

#endif